<?php

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\datetime\Plugin\Field\FieldType\DateTimeItemInterface;

function test_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login_form') {
    $form['#submit'][] = 'editor_login';
  }
}

function editor_login(&$form, $form_state) {
  $roles = \Drupal::currentUser()->getRoles();
  if (in_array('news_publisher', $roles)) {
    $form_state->setRedirect('system.admin_content');
  } else {
    $form_state->setRedirect('<front>');
  }
}

function test_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  if ($field_definition->getName() == 'field_date' && $operation == 'edit') {
    return AccessResult::forbiddenIf(!$account->hasPermission('update field date'));
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_entity_presave().
 */
function test_entity_presave(EntityInterface $entity) {
  if ($entity->getEntityTypeId() == 'node' && $entity->getType() == 'news' && $entity->field_date->value == '') {
    if (!$entity->isNew() && $entity->get('status')
        ->getValue() != $entity->original->get('status')
        ->getValue()) {
      $entity->field_date->value = date('Y-m-d') . 'T' . date('h:i:s');
    }
  }
}

///**
// * Implements hook_entity_access().
// */
//function test_entity_access(EntityInterface $entity, $operation, AccountInterface $account) {
//  if ($entity->getEntityTypeId() == 'node' && $entity->getType() == 'news' && $operation == 'view') {
//    if ($entity->hasField('field_date')) {
//      $entityDate = $entity->get('field_date')->date->getTimestamp();
//      $now = new DrupalDateTime('now');
//      $now->setTimezone(new \DateTimeZone(DateTimeItemInterface::STORAGE_TIMEZONE));
//      $now = $now->getTimestamp();
//      if ($entityDate > $now) {
//        if (in_array('news_publisher', $account->getRoles()) || $account->id() == $entity->getOwnerId()) {
//          return AccessResult::neutral();
//        }
//        else {
//          return AccessResult::forbidden();
//        }
//      }
//    }
//    return AccessResult::neutral();
//  }
//}

/**
 * Implements hook_entity_access() from Ann.
 */
function test_entity_access($entity, $operation, $account) {

  $entity_date = $entity->field_date->date;

  $now = new DrupalDateTime('now');
  $now->setTimezone(new \DateTimeZone(DateTimeItemInterface::STORAGE_TIMEZONE));

  if ($entity->getEntityTypeId() == 'node' && $entity->getType() == 'news') {
    if ($operation == 'view') {
      if(!$account->hasPermission('future news release')) {
        if ($now < $entity_date) {
          return AccessResult::forbidden();
        }
      }
    }
  }
  return AccessResult::allowed();
}

/**
 * Implements hook_theme().
 */
function test_theme($existing, $type, $theme, $path) {

}
